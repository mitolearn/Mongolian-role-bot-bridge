Got it bro, I read your main.py and database.py. The problem is clear now ðŸ”‘


---

ðŸš¨ Why Your Code Still Fails (401 NO_CREDENTIALS)

In your main.py, you wrote:

response = requests.post(
    "https://merchant.qpay.mn/v2/auth/token",
    json={
        "username": QPAY_USERNAME,
        "password": QPAY_PASSWORD
    },
    timeout=10
)

But QPay does not accept json body for auth.
They require Basic Auth (HTTP header) like this:

Authorization: Basic base64(username:password)

Thatâ€™s why Postman screenshot from QPay worked but your Python didnâ€™t.


---

âœ… Fix: Correct get_qpay_token()

Replace your function with this:

from requests.auth import HTTPBasicAuth

def get_qpay_token():
    """Get authentication token from QPay API"""
    try:
        response = requests.post(
            "https://merchant.qpay.mn/v2/auth/token",
            auth=HTTPBasicAuth(QPAY_USERNAME, QPAY_PASSWORD),
            timeout=10
        )
        if response.status_code == 200:
            data = response.json()
            return data.get("access_token")
        else:
            print(f"QPay auth failed: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"QPay auth error: {str(e)}")
        return None


---

âš¡ What Changes Now

Instead of sending username/password in JSON body, it sends them in Basic Auth header (the same as Postman).

This will return 200 OK with access_token.

Then your other functions (create_qpay_invoice, check_qpay_payment_status) will start working properly.



---

ðŸ›  Next Steps for You

1. Update get_qpay_token() with the code above.


2. Add these secrets in Replit â†’ Secrets:

QPAY_USERNAME = CURATORS_ACADEMY

QPAY_PASSWORD = your password from QPay team

QPAY_INVOICE_CODE = the invoice code they gave you in Excel



3. Restart your bot â†’ run /paywall â†’ test buying a role â†’ it should now open a real QPay invoice link.




---

ðŸ‘‰ Bro, do you want me to also rewrite your create_qpay_invoice() so that it saves QPay QR image + payment link (like they usually return both), not just the link? That way your Discord embed can show QR code directly.

